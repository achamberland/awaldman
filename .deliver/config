#!/usr/bin/env bash

APP="v2" # name of your release

US="138.197.133.111"

USER="achamberland"

BUILD_HOST="$US" # host where to build the release
BUILD_USER="$USER" # local user at build host
BUILD_AT="/tmp/edeliver/$APP/builds" # build directory on build host

#STAGING_HOSTS="stage-01.aaronwaldman.com" # staging / test hosts separated by space
#STAGING_USER="awaldman-stage" # local user at staging hosts
#TEST_AT="/test/awaldman-stage" # deploy directory on staging hosts. default is DELIVER_TO

PRODUCTION_HOSTS="$US" # deploy / production hosts separated by space
PRODUCTION_USER="$USER" # local user at deploy hosts
DELIVER_TO="/home/$USER" # deploy directory on production hosts

LINK_VM_ARGS="/home/$USER/vm.args"

pre_erlang_get_and_update_deps() {
  local _prod_secret_path="/home/$USER/prod.secret.exs"
  if [ "$TARGET_MIX_ENV" = "prod" ]; then
    __sync_remote "
      ln -sfn '$_prod_secret_path' '$BUILD_AT/config/prod.secret.exs'

      cd '$BUILD_AT'

      mkdir -p priv/static

      mix deps.get

      npm install

      brunch build --production

      APP='$APP' MIX_ENV='$TARGET_MIX_ENV' $MIX_CMD phoenix.digest $SILENCE
    "
  fi
}

pre_erlang_clean_compile() {
    status "Installing NodeJS dependencies"
    __sync_remote "
      [ -f ~/.profile ] && source ~/.profile # load profile (optional)
      set -e # fail if any command fails (recommended)
      cd '$BUILD_AT' # enter the build directory on the build host (required)
      # prepare something
      mkdir -p priv/static # required by the phoenix.digest task
      # run your custom task
      APP='$APP' MIX_ENV='$TARGET_MIX_ENV' npm install
    "
    status "Building frontend items"
    __sync_remote "
      [ -f ~/.profile ] && source ~/.profile # load profile (optional)
      set -e # fail if any command fails (recommended)
      cd '$BUILD_AT' # enter the build directory on the build host (required)
      # prepare something
      mkdir -p priv/static # required by the phoenix.digest task
      # run your custom task
      APP='$APP' MIX_ENV='$TARGET_MIX_ENV' npm run deploy
    "
    status "Running phoenix.digest" # log output prepended with "----->"
    __sync_remote " # runs the commands on the build host
      [ -f ~/.profile ] && source ~/.profile # load profile (optional)
      set -e # fail if any command fails (recommended)
      cd '$BUILD_AT' # enter the build directory on the build host (required)
      # prepare something
      mkdir -p priv/static # required by the phoenix.digest task
      # run your custom task
      APP='$APP' MIX_ENV='$TARGET_MIX_ENV' $MIX_CMD phoenix.digest $SILENCE
    "
  }

  # copies the prod.secret.exs file you keep sequestered on your build
  # machine into the build directory.
  pre_erlang_get_and_update_deps() {
    # copy it on the build host to the build directory when building
    local _secret_config_file_on_build_host="/home/build/awaldman_prod.secret.exs"
    if [ "$TARGET_MIX_ENV" = "prod" ]; then
      status "Linking '$_secret_config_file_on_build_host' to build config dir"
      __sync_remote "
        ln -sfn '$_secret_config_file_on_build_host' '$BUILD_AT/config/prod.secret.exs'
      "
    fi
  }
